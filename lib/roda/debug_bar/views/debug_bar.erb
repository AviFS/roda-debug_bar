
  <style>
    <%#= Rouge::Themes::Colorful.render(scope: '.highlight') %>
    <%#= Rouge::Themes::Github.mode(:light).render(scope: '.highlight') %>

    /* SQL syntax highlight */

    /* keywords */
    .highlight .k {
      font-weight: bold;
      color: #912520;     /* ruby-700 */
    }

    /* strings */
    .highlight .nv {
      color: #009999;
    }

    /* integers */
    .highlight .mi {
      font-weight: bold;
      color: #0086B3;
    }

    /* punctuation */
    .highlight .p {
      color: #9ca3af;
    }



    /****** ruby hash ******/

    /* strings */
    .highlight.ruby.hash .ss {
      font-weight: bold;
      color: #912520;
    }

    .highlight.ruby.hash .s2 {
      color: #009999;
    }

    /* integers */
    .highlight.ruby.hash .mi {
      font-weight: normal;
      color: #0086B3;
    }

    /* punctuation */
    .highlight.ruby.hash .p {
      color: #9ca3af;
    }

    .highlight.ruby.hash .exp {
      color: #487bcd;
    }


    /******* ruby routes tab *******/

    .highlight.ruby.route .s1 {
      color: #009999;
    }

    .highlight.ruby.route .nf {
      font-style: italic;
    }

    .highlight.ruby.route .n {
      font-weight: bold;
      color: #912520;     /* ruby-700 */
    }

    .highlight.ruby.route .no {
      color: #138;
    }

    .highlight.ruby.route .o {
      color: #9ca3af;
    }

    .highlight.ruby .nb {
      color: #701d19;
    }


    /*
    .reset {
      all: initial;
    }

    .reset * {
      all: unset;
    }
    */
/*
    .normalize * {
      /* @apply @tailwind base;
      all: unset;
      display: block;
    }
*/


  </style>

  <!--  -->
  <link rel="stylesheet" href="/debug_bar/out.css">
  <!--  -->

  <div class="reset">
    <div x-data="debugBarComponent()" x-init="init()" class="debug-bar">
      <!-- Ruby logo in lower lefthand side -->
      <div>
        <div x-show="openState == 'hidden'" class="fixed bottom-0 left-0 pb-2 pt-2 pl-2 pr-3 text-center hover:cursor-pointer border-t-4 border-ruby-600 bg-gray-200" @click="setOpenState('open')">
          <img src="/debug_bar/ruby.png" alt="Ruby" class="h-7 w-auto">
        </div>
      </div>
      <section x-show="openState != 'hidden'" class="fixed bottom-0 left-0 w-full bg-gray-200 border-t border-gray-300">
        <!-- Debug Bar -->
        <div class="w-full bg-gray-200 border-t border-gray-300">
          <!-- Tabs -->
          <div class="flex items-center bg-gray-200 justify-between">
            <div class="w-8/12 flex items-center">
              <!-- Clickable Ruby logo to hide debug bar -->
              <div class="px-2 text-center hover:cursor-pointer" @click="setOpenState('hidden')">
                <img src="/debug_bar/ruby.png" alt="Ruby" class="h-7 w-auto">
              </div>
              <!-- Tab group for request/models/queries... -->
              <template x-for="(tab, index) in tabs" :key="index">
                <div
                  @click="selectTab(index)"
                  class="flex-1 py-2 text-center cursor-pointer text-sm border-t-4 transition-all"
                  :class="selectedTab === index
                    ? 'bg-gray-300 border-ruby-600 font-bold'
                    : 'bg-gray-200 border-transparent text-gray-800'"
                  x-text="tab.label">
                </div>
              </template>
            </div>
            <!--
            <div class="w-16">
            </div>
            -->

            <div class="flex">
              <!-- Make right bar left aligned instead -->
              <div class="flex-1 py-2 text-center text-sm border-t-4 border-transparent text-gray-800 font-mono">
                <%= relative_render('debug_bar/right_bar') %>
              </div>

              <div class="flex justify-center items-center mr-2 ml-4">
                <!-- <img src="" alt="foo" srcset="" @click="setOpenState('minimized')" class="hover:cursor-pointer"> -->


                <a href="/debug_bar/last/1" class="hover:cursor-pointer">
                  <svg width="24px" height="24px" viewBox="0 0 76 76" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" baseProfile="full" enable-background="new 0 0 76.00 76.00" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill="#000000" fill-opacity="1" stroke-linejoin="round" d="M 46.5,19C 47.8807,19 49,20.1193 49,21.5C 49,22.8807 47.8807,24 46.5,24L 45.8641,23.9184L 43.5566,26.8718C 45.1489,28.0176 46.5309,29.6405 47.6023,31.6025C 44.8701,32.4842 41.563,33 38,33C 34.4369,33 31.1299,32.4842 28.3977,31.6025C 29.4333,29.7061 30.7591,28.1265 32.2844,26.9882L 29.9221,23.9646C 29.7849,23.9879 29.6438,24 29.5,24C 28.1193,24 27,22.8808 27,21.5C 27,20.1193 28.1193,19 29.5,19C 30.8807,19 32,20.1193 32,21.5C 32,22.0018 31.8521,22.4691 31.5976,22.8607L 34.0019,25.938C 35.2525,25.3305 36.5982,25 38,25C 39.3339,25 40.617,25.2993 41.8156,25.8516L 44.2947,22.6786C 44.1066,22.3274 44,21.9262 44,21.5C 44,20.1193 45.1193,19 46.5,19 Z M 54.5,40C 55.3284,40 56,40.6716 56,41.5C 56,42.3284 55.3284,43 54.5,43L 49.9511,43C 49.88,44.0847 49.7325,45.1391 49.5162,46.1531L 54.8059,48.6197C 55.5567,48.9698 55.8815,49.8623 55.5314,50.6131C 55.1813,51.3639 54.2889,51.6887 53.5381,51.3386L 48.6665,49.067C 46.8161,53.9883 43.2172,57.4651 39,57.9435L 39,34.9864C 42.541,34.8897 45.7913,34.283 48.4239,33.3201L 48.6187,33.8074L 53.73,31.8454C 54.5034,31.5485 55.371,31.9348 55.6679,32.7082C 55.9648,33.4816 55.5785,34.3492 54.8051,34.6461L 49.482,36.6895C 49.717,37.7515 49.8763,38.859 49.9511,40L 54.5,40 Z M 21.5,40L 26.0489,40C 26.1237,38.859 26.2829,37.7516 26.518,36.6895L 21.1949,34.6461C 20.4215,34.3492 20.0352,33.4816 20.332,32.7082C 20.6289,31.9348 21.4966,31.5485 22.27,31.8454L 27.3812,33.8074L 27.5761,33.3201C 30.2087,34.283 33.4589,34.8897 37,34.9864L 37,57.9435C 32.7827,57.4651 29.1838,53.9883 27.3335,49.067L 22.4618,51.3387C 21.711,51.6888 20.8186,51.3639 20.4685,50.6131C 20.1184,49.8623 20.4432,48.9699 21.194,48.6198L 26.4838,46.1531C 26.2674,45.1392 26.12,44.0847 26.0489,43L 21.5,43C 20.6716,43 20,42.3285 20,41.5C 20,40.6716 20.6716,40 21.5,40 Z "></path> </g></svg>
                </a>

                <svg @click="toggleMinimized()" class="hover:cursor-pointer size-5" :class="openState == 'minimized' ? 'rotate-180': ''"
                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
                </svg>
                <svg @click="setOpenState('hidden')" class="hover:cursor-pointer size-5"
                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path d="M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z" />
                </svg>
              </div>
            </div>
          </div>
          <!-- Tab Content -->
          <!-- <div class="p-8 bg-gray-100 text-sm text-gray-800"> -->
          <!-- <div class="bg-gray-100 text-sm text-gray-800 h-48 overflow-y-auto"> -->
          <%#= @data.inspect %>
          <%#= @data[:request].request_method %>
          <%#= @data[:request].path %>
          <div class="bg-white text-sm text-gray-800 h-56 overflow-y-auto" x-show="openState == 'open'">
            <template x-for="(tab, index) in tabs" :key="index">
              <div x-show="selectedTab === index" x-html="tab.content"></div>
            </template>
          </div>
        </div>
      </section>
    </div>
  </div>

  <script>
    function debugBarComponent() {
      return {
        selectedTab: 0,
        openState: 'open',
        tabs: [
          // Can't comment out lines with backticks or it doesn't render
          { label: 'Request', content: `<%= relative_render('debug_bar/request') %>` },
          { label: 'Models', content: `<%= relative_render('debug_bar/models') %>` },
          { label: 'Queries', content: `<%= relative_render('debug_bar/queries') %>` },
          { label: 'Messages', content: `<%= relative_render('debug_bar/messages') %>` },
          // { label: 'Exceptions', content: 'Debug Info for Tab 3' },
          { label: 'Views', content: `<%= relative_render('debug_bar/views') %>` },
          { label: 'Route', content:  `<%= relative_render('debug_bar/route') %>` },
          // { label: 'Mails', content: 'Debug Info for Tab 4' },
          // { label: 'Gate', content: 'Debug Info for Tab 4' },
          { label: 'Session', content: `<%= relative_render('debug_bar/session') %>` },
        ],

        init() {
          this.selectedTab = parseInt(sessionStorage.getItem('debugBar.selectedTab')) || this.selectedTab;
          this.openState = sessionStorage.getItem('debugBar.openState') || this.openState;
        },

        toggleMinimized() {
          this.setOpenState(this.openState == 'minimized'? 'open': 'minimized');
        },

        setOpenState(openState) {
          this.openState = openState;
          sessionStorage.setItem('debugBar.openState', openState);
        },

        selectTab(index) {
          this.selectedTab = index;
          sessionStorage.setItem('debugBar.selectedTab', index);
        }
      };
    }
  </script>
